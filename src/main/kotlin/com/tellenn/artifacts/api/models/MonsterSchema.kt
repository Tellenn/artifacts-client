/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.tellenn.artifacts.api.models

import com.tellenn.artifacts.api.models.DropRateSchema
import com.tellenn.artifacts.api.models.SimpleEffectSchema

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param name Name of the monster.
 * @param code The code of the monster. This is the monster's unique identifier (ID).
 * @param level Monster level.
 * @param hp Monster hit points.
 * @param attackFire Monster fire attack.
 * @param attackEarth Monster earth attack.
 * @param attackWater Monster water attack.
 * @param attackAir Monster air attack.
 * @param resFire Monster % fire resistance.
 * @param resEarth Monster % earth resistance.
 * @param resWater Monster % water resistance.
 * @param resAir Monster % air resistance.
 * @param criticalStrike Monster % critical strike.
 * @param minGold Monster minimum gold drop. 
 * @param maxGold Monster maximum gold drop. 
 * @param drops Monster drops. This is a list of items that the monster drops after killing the monster. 
 * @param effects List of effects.
 */


data class MonsterSchema (

    /* Name of the monster. */
    @field:JsonProperty("name")
    val name: kotlin.String,

    /* The code of the monster. This is the monster's unique identifier (ID). */
    @field:JsonProperty("code")
    val code: kotlin.String,

    /* Monster level. */
    @field:JsonProperty("level")
    val level: kotlin.Int,

    /* Monster hit points. */
    @field:JsonProperty("hp")
    val hp: kotlin.Int,

    /* Monster fire attack. */
    @field:JsonProperty("attack_fire")
    val attackFire: kotlin.Int,

    /* Monster earth attack. */
    @field:JsonProperty("attack_earth")
    val attackEarth: kotlin.Int,

    /* Monster water attack. */
    @field:JsonProperty("attack_water")
    val attackWater: kotlin.Int,

    /* Monster air attack. */
    @field:JsonProperty("attack_air")
    val attackAir: kotlin.Int,

    /* Monster % fire resistance. */
    @field:JsonProperty("res_fire")
    val resFire: kotlin.Int,

    /* Monster % earth resistance. */
    @field:JsonProperty("res_earth")
    val resEarth: kotlin.Int,

    /* Monster % water resistance. */
    @field:JsonProperty("res_water")
    val resWater: kotlin.Int,

    /* Monster % air resistance. */
    @field:JsonProperty("res_air")
    val resAir: kotlin.Int,

    /* Monster % critical strike. */
    @field:JsonProperty("critical_strike")
    val criticalStrike: kotlin.Int,

    /* Monster minimum gold drop.  */
    @field:JsonProperty("min_gold")
    val minGold: kotlin.Int,

    /* Monster maximum gold drop.  */
    @field:JsonProperty("max_gold")
    val maxGold: kotlin.Int,

    /* Monster drops. This is a list of items that the monster drops after killing the monster.  */
    @field:JsonProperty("drops")
    val drops: kotlin.collections.List<DropRateSchema>,

    /* List of effects. */
    @field:JsonProperty("effects")
    val effects: kotlin.collections.List<SimpleEffectSchema>? = null

)

