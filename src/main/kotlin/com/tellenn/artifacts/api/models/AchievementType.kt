/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.tellenn.artifacts.api.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * Values: combat_kill,combat_drop,combat_level,gathering,crafting,recycling,task,other,use
 */

enum class AchievementType(val value: kotlin.String) {

    @JsonProperty(value = "combat_kill")
    combat_kill("combat_kill"),

    @JsonProperty(value = "combat_drop")
    combat_drop("combat_drop"),

    @JsonProperty(value = "combat_level")
    combat_level("combat_level"),

    @JsonProperty(value = "gathering")
    gathering("gathering"),

    @JsonProperty(value = "crafting")
    crafting("crafting"),

    @JsonProperty(value = "recycling")
    recycling("recycling"),

    @JsonProperty(value = "task")
    task("task"),

    @JsonProperty(value = "other")
    other("other"),

    @JsonProperty(value = "use")
    use("use");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is AchievementType) "$data" else null

        /**
         * Returns a valid [AchievementType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): AchievementType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

